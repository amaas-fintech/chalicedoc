<document classes="chalice-app" ids="testing" names="testing" source="<string>" title="Testing">
    <AppName classes="chalice-appname">
        Testing
    <paragraph>
        A simple example.
    <Route classes="chalice-route" ids="index" names="index /">
        <RouteName classes="chalice-routename">
            <MethodList classes="chalice-methodlist">
                <Method classes="chalice-method get" xml:space="preserve">
                    GET
             
            <Path classes="chalice-path" xml:space="preserve">
                /
        <paragraph>
            Return {'hello': 'world'}.
        <paragraph>
            The view function above will return 
            <literal>
                {"hello": "world"}
            
            whenever you make an HTTP GET request to '/'.
    <Route classes="chalice-route" ids="hello-name" names="hello_name /hello/{name}">
        <RouteName classes="chalice-routename">
            <MethodList classes="chalice-methodlist">
                <Method classes="chalice-method get" xml:space="preserve">
                    GET
                 
                <Method classes="chalice-method post" xml:space="preserve">
                    POST
             
            <Path classes="chalice-path" xml:space="preserve">
                /hello/{name}
        <paragraph>
            <literal>
                '/hello/james' -> {"hello": "james"}
            .
        <section dupnames="returns" ids="returns">
            <title>
                Returns
            <paragraph>
                <literal>
                    {'hello': name}
    <Route classes="chalice-route" ids="no-doc" names="no_doc /minimal">
        <RouteName classes="chalice-routename">
            <MethodList classes="chalice-methodlist">
                <Method classes="chalice-method get" xml:space="preserve">
                    GET
             
            <Path classes="chalice-path" xml:space="preserve">
                /minimal
    <Route classes="chalice-route" ids="xref" names="xref /refs">
        <RouteName classes="chalice-routename">
            <MethodList classes="chalice-methodlist">
                <Method classes="chalice-method get" xml:space="preserve">
                    GET
             
            <Path classes="chalice-path" xml:space="preserve">
                /refs
        <paragraph>
            Cross-reference example.
        <paragraph>
            This docstring contains a cross-reference to 
            <problematic ids="id2" refid="id1">
                :chalice:route:`GET /`
            .
        <system_message backrefs="id2" ids="id1" level="3" line="76" source="$SOURCEFILE" type="ERROR">
            <paragraph>
                Unknown interpreted text role "chalice:route".
        <paragraph>
            You can also use the
            <reference name=":any:" refuri="http://www.sphinx-doc.org/en/stable/markup/inline.html#role-any">
                :any:
            <target ids="any" names=":any:" refuri="http://www.sphinx-doc.org/en/stable/markup/inline.html#role-any">
            
            functionality: 
            <problematic ids="id4" refid="id3">
                :any:`GET /hello/{name}`
            .
        <system_message backrefs="id4" ids="id3" level="3" line="78" source="$SOURCEFILE" type="ERROR">
            <paragraph>
                Unknown interpreted text role "any".
    <Route classes="chalice-route" dupnames="/users" ids="create-user" names="create_user">
        <RouteName classes="chalice-routename">
            <MethodList classes="chalice-methodlist">
                <Method classes="chalice-method post" xml:space="preserve">
                    POST
             
            <Path classes="chalice-path" xml:space="preserve">
                /users
        <paragraph>
            Create user.
        <paragraph>
            This is the JSON body the user sent in their POST request:
        <literal_block xml:space="preserve">
            user_as_json = app.current_request.json_body
        <paragraph>
            We'll echo the json body back to the user in a 'user' key.
        <section dupnames="returns" ids="id5">
            <title>
                Returns
            <paragraph>
                <literal>
                    {'user': user_as_json}
    <Route classes="chalice-route" dupnames="/users" ids="get-user" names="get_user">
        <RouteName classes="chalice-routename">
            <MethodList classes="chalice-methodlist">
                <Method classes="chalice-method get" xml:space="preserve">
                    GET
             
            <Path classes="chalice-path" xml:space="preserve">
                /users
        <paragraph>
            Get user.
        <paragraph>
            Return user information as sent in query parameters:
        <literal_block xml:space="preserve">
            user_as_json = app.current_request.query_params
        <section dupnames="returns" ids="id6">
            <title>
                Returns
            <paragraph>
                <literal>
                    {'user': user_as_json}
